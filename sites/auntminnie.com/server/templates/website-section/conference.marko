$ const { id, alias, name, pageNode } = input;

$ const { site } = out.global;

$ const pageObj = site.getAsObject(`pageDetails.${alias}`);
$ const { name: title, teaser: description } = pageObj;
$ const imageOptions = { fit: 'fill', 'fill': 'solid', };
$ const nodes = [];

$ if (pageObj.childrenAliases && pageObj.childrenAliases.length) {
  pageObj.childrenAliases.forEach((childAlias) => nodes.push(site.getAsObject(`pageDetails.${(childAlias)}`)));
}

<global-website-section-upcoming-feed-layout
  id=id
  alias=alias
  name=name
  page-node=pageNode
>
  <@after-name>
    <marko-web-page-wrapper modifiers=["toc"]>
      <@section>
        <marko-web-node-list
          inner-justified=true
          flush-x=true
          flush-y=false
          modifiers=["section-feed"]
        >
          <@header>
            Featured Conference Coverage
          </@header>
          <@nodes nodes=nodes>
            <@slot|{ node, index }|>
              $ const tocNode = {
                ...node,
                shortName: node.name,
              }
              <theme-section-feed-content-node
                with-section=false
                with-dates=false
                ...input.node
                node=tocNode
                image-options=imageOptions
                mobile-image-options=imageOptions
                teaserCTA=node.teaserCTA
                display-image=true
              />
            </@slot>
          </@nodes>
        </marko-web-node-list>
      </@section>
    </marko-web-page-wrapper>
  </@after-name>
  <!-- <@section|{ blockName, section, aliases }|>
    $ console.log('after: ', blockName, section, aliases)
  </@section> -->
</global-website-section-upcoming-feed-layout>
